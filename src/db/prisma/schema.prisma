generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Job {
  id             String             @id @default(uuid()) @db.Uuid
  /// [JobData]
  data           Json               @default("{}")
  status         JobOperationStatus @default(CREATED)
  /// [PersistenceSnapshot]
  xstate         Json
  percentage     Int                @default(0)
  creationTime   DateTime           @default(now()) @map("creation_time")
  updateTime     DateTime           @updatedAt @map("update_time")
  expirationTime DateTime?          @map("expiration_time")
  jobMode        JobMode            @default(PRE_DEFINED) @map("job_mode")
  userMetadata   Json               @default("{}") @map("user_metadata")
  priority       Priority           @default(VERY_LOW)
  creator        Creator            @default(UNKNOWN)
  ttl            DateTime?
  notifications  Json               @default("{}")
  name           JobName            @default(DEFAULT)
  Stage          Stage[]

  @@map("job")
}

enum JobOperationStatus {
  PENDING     @map("Pending")
  IN_PROGRESS @map("In-Progress")
  COMPLETED   @map("Completed")
  FAILED      @map("Failed")
  ABORTED     @map("Aborted")
  WAITING     @map("Waiting")
  CREATED     @map("Created")
  PAUSED      @map("Paused")

  @@map("job_operation_status_enum")
}

enum StageOperationStatus {
  PENDING     @map("Pending")
  IN_PROGRESS @map("In-Progress")
  COMPLETED   @map("Completed")
  FAILED      @map("Failed")
  ABORTED     @map("Aborted")
  PAUSED      @map("Paused")
  WAITING     @map("Waiting")
  CREATED     @map("Created")

  @@map("stage_operation_status_enum")
}

enum Priority {
  VERY_HIGH @map("Very-High")
  HIGH      @map("High")
  MEDIUM    @map("Medium")
  LOW       @map("Low")
  VERY_LOW  @map("Very-Low")

  @@map("priority_enum")
}

enum JobMode {
  PRE_DEFINED @map("Pre-Defined")
  DYNAMIC     @map("Dynamic")

  @@map("job_mode_enum")
}

enum Creator {
  MAP_COLONIES @map("Map-Colonies")
  UNKNOWN      @map("Unknown")

  @@map("creator")
}

enum JobName {
  INGESTION @map("Ingestion")
  EXPORT    @map("Export")
  DEFAULT   @map("Default")

  @@map("job_name_enum")
}

model Stage {
  id   String @id @default(uuid()) @db.Uuid
  /// [StageData]
  data Json   @default("{}")

  job    Job    @relation(fields: [job_id], references: [id], onDelete: Cascade)
  job_id String @db.Uuid

  percentage   Int                  @default(0)
  /// [UserMetadata]
  userMetadata Json                 @default("{}") @map("user_metadata")
  /// [StageSummary]
  summary      Json                 @default("{}")
  status       StageOperationStatus @default(CREATED)
  /// [PersistenceSnapshot]
  xstate       Json
  name         StageName            @default(DEFAULT)

  @@map("stage")
}

enum StageName {
  TILE_SEEDING    @map("Tile-Seeding")
  TILE_RENDERING  @map("Tile-Rendering")
  PUBLISH_CATALOG @map("Publish-Catalog")
  PUBLISH_LAYER   @map("Publish-Layer")
  DEFAULT         @map("Default")

  @@map("stage_name_enum")
}
